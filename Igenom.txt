//выгрузка данных в excel      
	  private void button7_Click_1(object sender, EventArgs e)
        {
            
                Microsoft.Office.Interop.Excel.Application ExcelApp = new Microsoft.Office.Interop.Excel.Application();
                Microsoft.Office.Interop.Excel.Workbook ExcelWorkBook;
                Microsoft.Office.Interop.Excel.Worksheet ExcelWorkSheet;

                ExcelWorkBook = ExcelApp.Workbooks.Add(System.Reflection.Missing.Value);

                ExcelWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)ExcelWorkBook.Worksheets.get_Item(1);

                for (int i = 0; i < dataGridView4.Rows.Count; i++)
                {
                    for (int j = 0; j < dataGridView4.ColumnCount; j++)
                    {
                        ExcelApp.Cells[1, j + 1] = dataGridView4.Columns[j].HeaderText.ToString();
                        ExcelApp.Cells[i + 2, j + 1] = dataGridView4.Rows[i].Cells[j].Value;
                    }
                }
                ExcelApp.Visible = true;
                ExcelApp.UserControl = true;
            
        }
		
		
//Загрузка excel с изменением данных в бд с загружаемого файла
        private void button8_Click(object sender, EventArgs e)
        {
            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                List<List<string>> list = new List<List<string>>();
                Microsoft.Office.Interop.Excel.Application ObjExcel = new Microsoft.Office.Interop.Excel.Application();
                Microsoft.Office.Interop.Excel.Workbook ObjWorkBook = ObjExcel.Workbooks.Open(openFileDialog1.FileName, 0, false, 5, "", "", false, Microsoft.Office.Interop.Excel.XlPlatform.xlWindows, "", true, false, 0, true, false, false);
                Microsoft.Office.Interop.Excel.Worksheet ObjWorkSheet;
                ObjWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)ObjWorkBook.Sheets[1];
                MessageBox.Show("Дождитесь уведеомления о полной загрузке данных");
                //Количество заполненных столбцов
                Object formula, result;
                formula = "counta(A1:WWW1)";
                result = ObjExcel._Evaluate(formula);
                //--------------
                //имя столбца по номеру
                string column;
                //string y = GetExcelColumnName(Convert.ToInt32(result));
                //------
                richTextBox1.Clear();
                int i = 1;
                string k = "q", m;
                try
                {
                    while (k != null)
                    {
                        list.Add(new List<string>());
                        for (int colum = 1; colum <= Convert.ToInt32(result); colum++)
                        {
                            column = GetExcelColumnName(Convert.ToInt32(colum));
                            //MessageBox.Show(column.ToString());
                            Microsoft.Office.Interop.Excel.Range rangeA = ObjWorkSheet.get_Range(column + i.ToString(), column + i.ToString());
                            m = Convert.ToString(rangeA.Value);
                            //добавление данных в список
                            list[i - 1].Add(m);
                            k = Convert.ToString(rangeA.Value); //для проверки пустой строки
                        }
                        i++;

                        Application.DoEvents();
                    }
                }
                catch { MessageBox.Show("Ошибка выгрузки"); }



                finally
                {
                    ObjExcel.Quit();
                }
                MySqlConnection c = new MySqlConnection(MyConnectionString);
                MySqlCommand cmd;
                c.Open();
                try
                {
                    cmd = c.CreateCommand();
                    for (int z = 1; z < i - 2; z++)
                        for (int x = 4; x < Convert.ToInt32(result); x++)
                        {
                            cmd.CommandText = "update geneorders set value ='" + Convert.ToString(list[z][x]) + "' WHERE value = '1'  and gene_id in (select id from geneinfo WHERE name='" + list[z][1] + "' and locus='" + list[z][2] + "' and alleles='" + list[z][3] + "') and order_id in (SELECT id from orders WHERE order_no = '" + list[0][x] + "') LIMIT 1";
                            cmd.ExecuteNonQuery();
                        }
                }
                catch (Exception ex)
                {
                    MessageBox.Show(ex + "");
                }
                finally
                {
                    if (ConnectionState.Open == c.State) { c.Close(); }
                    MessageBox.Show("Данные обновлены!");
                }
                refresh_t_tests();

            }
        }
		
//Внесение новых данных в бд
        private void newgenebtn_Click_2(object sender, EventArgs e)
        {
            MySqlConnection s = new MySqlConnection(MyConnectionString);
            MySqlCommand cmd;
            s.Open();
            try
            {
                cmd = s.CreateCommand();
                cmd.CommandText = "INSERT INTO geneinfo(name, locus, alleles) VALUES(@name, @locus, @alleles)";
                cmd.Parameters.AddWithValue("@name", genenametb.Text);
                cmd.Parameters.AddWithValue("@locus", genelocustb.Text);
                cmd.Parameters.AddWithValue("@alleles", geneallelestb.Text);
                cmd.ExecuteNonQuery();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex + "");
            }
            finally
            {
                if (ConnectionState.Open == s.State) { s.Close(); }
                genelocustb.Clear();
                geneallelestb.Clear();
                genenametb.Clear();
            }
            refresh_t_tests();
        }